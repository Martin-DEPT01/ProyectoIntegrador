USE sales_company;

SELECT * FROM categories;
SELECT * FROM cities;
SELECT * FROM countries;
SELECT * FROM customers;
SELECT * FROM employees;
SELECT * FROM products;
SELECT * FROM sales;


select distinct totalprice from sales;

-- ¿Cuáles fueron los 5 productos más vendidos (por cantidad total), y cuál fue el vendedor que más unidades vendió de cada uno? 
-- Una vez obtenga los resultados, en el análisis responde: ¿Hay algún vendedor que aparece más de una vez como el que más vendió un producto? 
-- ¿Algunos de estos vendedores representan más del 10% de la ventas de este producto?


WITH PRODUCTOS_MAS_VENDIDOS AS (
SELECT PRODUCTID,SUM(QUANTITY) CANTIDAD_TOTAL FROM SALES
GROUP BY PRODUCTID
ORDER BY 2 DESC
LIMIT 5
),
VENDEDORES_POR_PRODUCTO AS (
SELECT PRODUCTID, SALESPERSONID, SUM(QUANTITY) CANTIDAD_VENDIDA FROM SALES
GROUP BY PRODUCTID, SALESPERSONID
-- ORDER BY PRODUCTID, SALESPERSONID
)

SELECT RANK() OVER(ORDER BY CANTIDAD_TOTAL DESC) RANKING,
VP.PRODUCTID, CANTIDAD_TOTAL, SALESPERSONID, CANTIDAD_VENDIDA,
COUNT(SALESPERSONID) OVER (PARTITION BY SALESPERSONID) MAYOR_VENTAS,
ROUND((CANTIDAD_VENDIDA / CANTIDAD_TOTAL)*100,2) AS P_VENTAS
FROM PRODUCTOS_MAS_VENDIDOS PV
INNER JOIN VENDEDORES_POR_PRODUCTO VP
ON PV.PRODUCTID = VP.PRODUCTID
WHERE CANTIDAD_VENDIDA = (SELECT MAX(CANTIDAD_VENDIDA) FROM VENDEDORES_POR_PRODUCTO WHERE PRODUCTID = PV.PRODUCTID)
ORDER BY CANTIDAD_TOTAL DESC;



-- RESOLUCION DE LA CLASE:
WITH productos_mas_vendidos AS (
SELECT 
	ProductID,
    SUM(Quantity) cantidad_total
FROM 
	sales
GROUP BY ProductID
ORDER BY cantidad_total DESC
LIMIT 5
),
ventas_por_vendedor_y_producto AS (
SELECT
	s.ProductID,
    s.SalesPersonID,
    SUM(s.Quantity) as cantidad_vendida,
    CONCAT(e.FirstName, ' ', e.LastName) AS vendedor_nombre
FROM
	sales s
JOIN
	employees e
ON
	s.SalesPersonID = e.EmployeeID
GROUP BY s.ProductID, s.SalesPersonID
),
top_vendedor_por_producto AS (
SELECT
	vvp.productID,
    vvp.salespersonid,
    vvp.vendedor_nombre,
    vvp.cantidad_vendida
FROM
	ventas_por_vendedor_y_producto vvp
JOIN (
	SELECT
		productID,
        MAX(cantidad_vendida) AS max_vendida
	FROM
		ventas_por_vendedor_y_producto
	GROUP BY ProductId
    ) t1
    ON vvp.ProductID = t1.ProductId AND vvp.cantidad_vendida = t1.max_vendida
)
SELECT
	p.ProductID,
    pr.ProductName,
    p.cantidad_total,
    t.salespersonid,
    t.vendedor_nombre,
    t.cantidad_vendida AS cantidad_vendida_por_vendedor
FROM productos_mas_vendidos p
JOIN products pr ON pr.ProductID = p.ProductID
JOIN top_vendedor_por_producto t ON t.ProductID = p.ProductID
ORDER BY p.cantidad_total DESC;


-- OTRA FORMA
/*
SELECT RANK() OVER(ORDER BY CANTIDAD_TOTAL DESC) RANKING,
PRODUCTID, CANTIDAD_TOTAL, SALESPERSONID, CANTIDAD_VENDIDA, COUNT(SALESPERSONID) OVER (PARTITION BY SALESPERSONID) MAYOR_VENTAS,
ROUND((CANTIDAD_VENDIDA / CANTIDAD_TOTAL)*100,2) AS P_VENTAS FROM (
SELECT VP.PRODUCTID, CANTIDAD_TOTAL, SALESPERSONID, CANTIDAD_VENDIDA, RANK() OVER(PARTITION BY VP.PRODUCTID ORDER BY CANTIDAD_VENDIDA DESC) RANKING FROM PRODUCTOS_MAS_VENDIDOS PV
INNER JOIN VENDEDORES_POR_PRODUCTO VP
ON PV.PRODUCTID = VP.PRODUCTID
ORDER BY CANTIDAD_TOTAL DESC
) AS SUB
WHERE RANKING = 1
ORDER BY CANTIDAD_TOTAL DESC
*/


-- Entre los 5 productos más vendidos, ¿cuántos clientes únicos (DIFERENTES) compraron cada uno y qué proporción representa sobre el total de clientes? 
-- Analiza si ese porcentaje sugiere que el producto fue ampliamente adoptado entre los clientes o si, por el contrario, 
-- fue comprado por un grupo reducido que generó un volumen alto de ventas. 
-- Compara los porcentajes entre productos e identifica si alguno de ellos depende más de un segmento específico de clientes

WITH PRODUCTOS_MAS_VENDIDOS AS (
SELECT PRODUCTID,SUM(QUANTITY) CANTIDAD_TOTAL FROM SALES
GROUP BY PRODUCTID
ORDER BY 2 DESC
LIMIT 5
), 
TOTAL_CLIENTES AS (
SELECT COUNT(DISTINCT CUSTOMERID) TOTAL_CLIENTES FROM CUSTOMERS
)
/*,
CLIENTES_POR_PRODUCTO AS (
SELECT S.PRODUCTID,
COUNT(DISTINCT S.CUSTOMERID) AS CLIENTES_UNICOS,
COUNT(DISTINCT S.CUSTOMERID) OVER(PARTITION BY PRODUCTID) AS TOTAL_CLINTES
FROM SALES S
WHERE S.PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
GROUP BY S.PRODUCTID
)*/
SELECT *, ROUND(CLIENTES_UNICOS/(SELECT TOTAL_CLIENTES FROM TOTAL_CLIENTES)*100,2) PROPORCION FROM 
(
SELECT  SL.PRODUCTID, COUNT(DISTINCT SL.CUSTOMERID) CLIENTES_UNICOS FROM sales SL
WHERE PRODUCTID IN (SELECT DISTINCT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
GROUP BY PRODUCTID
ORDER BY 1
) AS SUB


-- -----------------------------------------
WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
GROUP BY PRODUCTID
ORDER BY 1



SELECT COUNT(*) FROM CUSTOMERS;

-- NECESITO SABER CANTIDAD DE CLIENTES DIFERENTES POR CADA UNO DE ESOS 5 PRODUCTOS
SELECT  SL.PRODUCTID, COUNT(DISTINCT SL.CUSTOMERID) CLIENTES_UNICOS
 FROM sales SL
INNER JOIN CUSTOMERS CS
ON SL.CUSTOMERID = CS.CUSTOMERID
WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
GROUP BY PRODUCTID
ORDER BY 1


SELECT PRODUCTID,CUSTOMERID, SUM(QUANTITY) CANTIDAD FROM sales
WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
GROUP BY PRODUCTID,CUSTOMERID
ORDER BY 1, CANTIDAD DESC;


SELECT * FROM sales
WHERE PRODUCTID IN (179,161,47,280,103)
ORDER BY PRODUCTID;

-- --------------------------------------------------------------------------------------------

-- ¿A qué categorías pertenecen los 5 productos más vendidos y qué proporción representan dentro del total de unidades vendidas de su categoría? 
-- Utiliza funciones de ventana para comparar la relevancia de cada producto dentro de su propia categoría.
SET SESSION net_read_timeout = 120;
WITH PRODUCTOS_MAS_VENDIDOS AS (
SELECT PRODUCTID,SUM(QUANTITY) CANTIDAD_TOTAL_PRUDCTO FROM SALES
GROUP BY PRODUCTID
ORDER BY 2 DESC
LIMIT 5
),

VENTAS_POR_CATEGORIA AS(
SELECT CATEGORYID, SL.PRODUCTID, SUM(QUANTITY) CANTIDAD_TOTAL_CAT_PROD FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID
GROUP BY CATEGORYID, PRODUCTID
ORDER BY CATEGORYID, PRODUCTID
)

SELECT *, ROUND((CANTIDAD_TOTAL_CAT_PROD/CANTIDAD_TOTAL_CATEGORIA)*100,2) PROPORCION FROM
(
SELECT *, SUM(CANTIDAD_TOTAL_CAT_PROD) OVER (PARTITION BY CATEGORYID) CANTIDAD_TOTAL_CATEGORIA  
FROM VENTAS_POR_CATEGORIA
) AS SUB
WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC;
-- LIMIT 5
-- 29.078 SEC


-- OTRA FORMA:
SET profiling = 1;
WITH VENTAS_POR_CATEGORIA AS(
SELECT CATEGORYID, SL.PRODUCTID, SUM(QUANTITY) CANTIDAD_TOTAL_CAT_PROD FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID
GROUP BY CATEGORYID, PRODUCTID
ORDER BY CATEGORYID, PRODUCTID
)

SELECT *, ROUND((CANTIDAD_TOTAL_CAT_PROD/CANTIDAD_TOTAL_CATEGORIA)*100,2) PROPORCION FROM
(
SELECT *, SUM(CANTIDAD_TOTAL_CAT_PROD) OVER (PARTITION BY CATEGORYID) CANTIDAD_TOTAL_CATEGORIA  FROM VENTAS_POR_CATEGORIA
) AS SUB
-- WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC
LIMIT 5;
SHOW profile;
-- 19.859 SEC


-- OTRA FORMA:
SET profiling = 1;
WITH PRODUCTOS_MAS_VENDIDOS AS (
SELECT PRODUCTID,SUM(QUANTITY) CANTIDAD_TOTAL_PRUDCTO FROM SALES
GROUP BY PRODUCTID
ORDER BY 2 DESC
LIMIT 5
),

VENTAS_POR_CATEGORIA AS(
SELECT CATEGORYID, SL.PRODUCTID, SUM(QUANTITY) CANTIDAD_TOTAL_CAT_PROD FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID
GROUP BY CATEGORYID, PRODUCTID
ORDER BY CATEGORYID, PRODUCTID
)

SELECT SUB.*, ROUND((CANTIDAD_TOTAL_CAT_PROD/CANTIDAD_TOTAL_CATEGORIA)*100,2) PROPORCION FROM
(
SELECT *, SUM(CANTIDAD_TOTAL_CAT_PROD) OVER (PARTITION BY CATEGORYID) CANTIDAD_TOTAL_CATEGORIA  FROM VENTAS_POR_CATEGORIA
) AS SUB
INNER JOIN PRODUCTOS_MAS_VENDIDOS PV
ON SUB.PRODUCTID = PV.PRODUCTID
-- WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)
ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC;
SHOW profile;
-- 28.891 SEC


/*
SELECT * FROM PRODUCTOS_MAS_VENDIDOS PV
INNER JOIN VENTAS_POR_CATEGORIA VC
ON VC.CATEGORYID = PV.CATEGORYID

SELECT SUM(QUANTITY) OVER (PARTITION BY PR.PRODUCTID) CANTIDAD_TOTAL_PRODUCTO, 
SUM(QUANTITY) OVER (PARTITION BY CATEGORYID) CANTIDAD_TOTAL_CATEGORIA FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID

SHOW VARIABLES LIKE 'net_read_timeout';
SHOW VARIABLES LIKE 'wait_timeout';
SHOW VARIABLES LIKE 'max_allowed_packet';
SET SESSION net_read_timeout = 120;

SUM(CANTIDAD) OVER (PARTITION BY PRODUCTO), SUM(CANTIDAD) OVER (PARTITION BY CATEGORIA), 
(SUM(CANTIDAD) OVER (PARTITION BY PRODUCTO) /SUM(CANTIDAD) OVER (PARTITION BY CATEGORIA))*100

CANTIDAD_TOTAL_PRODUCTO, CANTIDAD_TOTAL_CATEGORIA, (CANTIDAD_TOTAL_PRODUCTO/CANTIDAD_TOTAL_CATEGORIA)*100
SELECT *,  SUM(CANTIDAD_TOTAL_CAT_PROD) OVER (PARTITION BY CATEGORYID) CANT_TOTAL FROM VENTAS_POR_CATEGORIA VC

WHERE PRODUCTID = (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS WHERE PRODUCTID = VC.PRODUCTID)

SELECT * FROM SALES SL
INNER JOIN PRODUCTS PR
ON ON PR.PRODUCTID = SL.PRODUCTID

-- SELECT * FROM VENTAS_POR_CATEGORIA
-- WHERE PRODUCTID IN (SELECT PRODUCTID FROM PRODUCTOS_MAS_VENDIDOS)

SELECT * FROM VENTAS_POR_CATEGORIA VC
INNER JOIN PRODUCTOS_MAS_VENDIDOS PV
ON VC.PRODUCTID = PV.PRODUCTID



SELECT DISTINCT CATEGORYID FROM products;

SELECT CATEGORYID, SUM(QUANTITY) CANTIDAD_TOTAL_CAT_PROD FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID
GROUP BY CATEGORYID
ORDER BY CATEGORYID
*/

-- ¿Cuáles son los 10 productos con mayor cantidad de unidades vendidas en todo el catálogo y cuál es su posición dentro de su propia categoría? 
-- Utiliza funciones de ventana para identificar el ranking de cada producto en su categoría. 
-- Luego, analiza si estos productos son también los líderes dentro de sus categorías o si compiten estrechamente con otros productos de alto rendimiento. 
-- ¿Qué observas sobre la concentración de ventas dentro de algunas categorías?

-- UN PRODUCTO NO SE ENCUENTRA EN MAS DE UNA CATEGORIA A LA VEZ.
SET profiling = 1;
WITH VENTAS_CATEGORIA_PRODUCTO AS (
SELECT CATEGORYID, SL.PRODUCTID, SUM(QUANTITY) CANTIDAD_TOTAL_CAT_PROD FROM PRODUCTS PR
INNER JOIN SALES SL
ON PR.PRODUCTID = SL.PRODUCTID
GROUP BY CATEGORYID, PRODUCTID
ORDER BY CATEGORYID, PRODUCTID
)

SELECT 
RANK() OVER (ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC) RANKING_EN_VENTAS,
CATEGORYID,PRODUCTID,CANTIDAD_TOTAL_CAT_PROD,
RANK() OVER (PARTITION BY CATEGORYID ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC) RANKING_EN_CATEGORIA
FROM VENTAS_CATEGORIA_PRODUCTO
ORDER BY CANTIDAD_TOTAL_CAT_PROD DESC
LIMIT 10;
SHOW profile;
